const TelegramApi = require("node-telegram-bot-api");
const token = "7101459473:AAE0Ug6MZ5irLKtBJzAdqK-c0BS6Pmk23vY";
const bot = new TelegramApi(token, { polling: true });
const fs = require("fs");


const setCommands = () => {
  bot.setMyCommands([{ command: "/start", description: "–°—Ç–∞—Ä—Ç" }]);
};
let usersData = [];
const userDataFilePath = "users.json";
if (fs.existsSync(userDataFilePath)) {
  const rawData = fs.readFileSync(userDataFilePath);
  usersData = JSON.parse(rawData);
}

// –û–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const lastGreetingTime = {};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –≤ —Ñ–∞–π–ª
const saveUsersData = () => {
  const jsonData = JSON.stringify(usersData, null, 2);
  fs.writeFileSync(userDataFilePath, jsonData);
  console.log("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª.");
};

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const username = msg.from.username;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö
  const existingUser = usersData.find((user) => user.username === username);
  if (existingUser) {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    const welcomeBackMessage = `–í—ñ—Ç–∞—î–º–æ üëã, –∑–∞–ø—Ä–æ—à—É—î–º–æ –≤–∞—Å –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—å\n–¥–æ –Ω–∞—à–æ–≥–æ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞,\n–¥–µ –≤–∏ –∑–º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞—à—ñ –Ω–æ–≤–∏–Ω–∏, \n—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–∫—Ü—ñ—ó —Ç–∞ —ñ–Ω—à–µ üó£`;
    bot.sendMessage(chatId, welcomeBackMessage, getMainMenuMarkup());
    return;
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∞—Å—Å–∏–≤
  const welcomeMessage = ``;
  bot.sendMessage(chatId, welcomeMessage, getMainMenuMarkup());
  usersData.push({ username, chatId });

  saveUsersData();

  console.log("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", username);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ç–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
function getMainMenuMarkup() {
  return {
    reply_markup: {
      keyboard: [
        [
          { text: "–ê–¥—Ä–µ—Å–∏ –Ω–∞—à–∏—Ö –º–∞–≥–∞–∑–∏–Ω—ñ–≤ üó∫" },
          { text: "–ó–≤ º—è–∑–∞—Ç–∏—Å—è –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º üìû" },
        ],
        [
          { text: "–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ üïò" },
          { text: "–ù–∞—à—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –≤ —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –º–µ—Ä–µ–∂–∞—Ö üì±" },
        ],
        [{ text: "–û—Ü—ñ–Ω—ñ—Ç—å –Ω–∞—Å! üíØ" }, { text: "–Ñ —Ä–æ–±–æ—Ç–∞! üë®‚Äçüíº" }],
      ],
      resize_keyboard: true,
    },
  };
}
bot.onText(/–ê–¥—Ä–µ—Å–∏ –Ω–∞—à–∏—Ö –º–∞–≥–∞–∑–∏–Ω—ñ–≤ üó∫/, (msg) => {
  const chatId = msg.chat.id;
  const addressMessage = `<b>–û–±–µ—Ä—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ a–±–æ –æ–±–ª–∞—Å—Ç—å üåÜ</b>`;
  const cityKeyboard = {
    reply_markup: {
      inline_keyboard: [
        [
          { text: "–ß–µ—Ä–Ω—ñ–≤—Ü—ñ", callback_data: "city_chernivtsi" },
          { text: "–ß–µ—Ä–Ω—ñ–≤–µ—Ü—å–∫–∞ –æ–±–ª.", callback_data: "chernivtsi_region" },
        ],
        [
          { text: "–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∞ –æ–±–ª.", callback_data: "khmelnytskyi_region" },
          {
            text: "–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª.",
            callback_data: "ivano-Frankivsk_region",
          },
        ],
      ],
    },
    parse_mode: "HTML",
  };
  bot.sendMessage(chatId, addressMessage, cityKeyboard);
});

bot.on("callback_query", (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const data = callbackQuery.data;
  switch (data) {
    case "city_chernivtsi":
      sendAddresses(
        chatId,
        " –ú—ñ—Å—Ç–æ –ß–µ—Ä–Ω—ñ–≤—Ü—ñ:\n–≤—É–ª. –ì–æ–ª–æ–≤–Ω–∞ , –±—É–¥. 189\n –≤—É–ª. –ì–æ–ª–æ–≤–Ω–∞ , –±—É–¥. 204-–± (–ï–Ω—Ç—É–∑—ñ–∞—Å—Ç—ñ–≤)\n–≤—É–ª. –ö–æ–º–∞—Ä–æ–≤–∞ , –±—É–¥. 13\n –≤—É–ª. –ö–æ–º–∞—Ä–æ–≤–∞ , –±—É–¥. 15\n–≤—É–ª. –ü–æ–ª—î—Ç–∞—î–≤–∞, –±—É–¥. 2-–∞\n –≤—É–ª. –ü—ñ–≤–¥–µ–Ω–Ω–æ –∫—ñ–ª—å—Ü–µ–≤–∞, –±—É–¥. 25\n–≤—É–ª. –Ü. –§—Ä–∞–Ω–∫–∞, –±—É–¥. 16\n –≤—É–ª. –®–∫—ñ–ª—å–Ω–∞, –±—É–¥. 1\n–≤—É–ª. –ì–æ—Ä—ñ—Ö—ñ–≤—Å—å–∫–∞, –±—É–¥. 14\n –≤—É–ª. –†—É—Å—å–∫–∞, –±—É–¥. 248-–±\n–≤—É–ª. –ß–∫–∞–ª–æ–≤–∞, –±—É–¥. 13 (–û–§–Ü–°/–°–ö–õ–ê–î)\n –≤—É–ª. –ú–∏–∫–æ–ª–∞—ó–≤—Å—å–∫–∞, –±—É–¥. 8-–≤ (–°–ö–õ–ê–î)\n–ø—Ä–æ—Å–ø–µ–∫—Ç –ù–µ–∑–∞–ª–µ–∂–Ω–æ–≤—Å—Ç—ñ, –±—É–¥. 111\n –ø—Ä–æ—Å–ø–µ–∫—Ç –ù–µ–∑–∞–ª–µ–∂–Ω–æ–≤—Å—Ç—ñ, –±—É–¥. 86 "
      );
      break;
    case "chernivtsi_region":
      sendAddresses(
        chatId,
        "  –ß–µ—Ä–Ω—ñ–≤–µ—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å:\n–º. –•–æ—Ç–∏–Ω –≤—É–ª. –û–ª—ñ–º–ø—ñ–π—Å—å–∫–∞, –±—É–¥. 80\n –ö—ñ—Ü–º–∞–Ω—Å—å–∫–∏–π —Ä-–Ω, —Å. –ú–∞–º–∞—ó–≤—Ü—ñ, –≤—É–ª. –®–µ–≤—á–µ–Ω–∫–∞, –±—É–¥. 153 \n–º. –°—Ç–æ—Ä–æ–∂–∏–Ω–µ—Ü—å –≤—É–ª. –§–µ–¥—å–∫–æ–≤–∏—á–∞, –±—É–¥. 3\n —Å–º—Ç. –ì–ª–∏–±–æ–∫–∞ –≤—É–ª. –ë–∞–∑–∞—Ä–Ω–∞, –±—É–¥. 1-–∞ \n–º. –ù–æ–≤–æ—Å–µ–ª–∏—Ü—è –≤—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞, –±—É–¥. 72 \n —Å–º—Ç. –õ—É–∂–∞–Ω–∏ –≤—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞, –±—É–¥. 61\n–º. –ì–µ—Ä—Ü–∞ –≤—É–ª. –ì–æ—Ä—å–∫–æ–≥–æ, –±—É–¥.1"
      );
      break;
    case "khmelnytskyi_region":
      sendAddresses(
        chatId,
        "  –•–º–µ–ª—å–Ω–∏—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å:\n–º. –ö–∞–º'–Ω–µ–Ω–µ—Ü—å - –ü–æ–¥—ñ–ª—å—Å—å–∫–∏–π, –≤—É–ª. –í–∞—Å–∏–ª—å—î–≤–∞, –±—É–¥. 1\n –º. –ö–∞–º'–Ω–µ–Ω–µ—Ü—å - –ü–æ–¥—ñ–ª—å—Å—å–∫–∏–π, –≤—É–ª. –î. –ì–∞–ª–∏—Ü—å–∫–æ–≥–æ, –±—É–¥. 13\n–º. –î—É–Ω–∞—ó–≤—Ü—ñ, –≤—É–ª. –®–µ–≤—á–µ–Ω–∫–∞, –±—É–¥. 111-–∞\n –º. –•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π, –≤—É–ª. –°. –ë–∞–Ω–¥–µ—Ä–∏ , –±—É–¥. 2/1-–ê, –ø—Ä–∏–º—ñ—â–µ–Ω–Ω—è ‚Ññ117\n—Å–º—Ç.–Ø—Ä–º–æ–ª–∏–Ω—Ü—ñ, –≤—É–ª.–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∞,3\n –º. –•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π, –≤—É–ª. –°–≤–æ–±–æ–¥–∏ 1–∞"
      );
      break;
    case "ivano-Frankivsk_region":
      sendAddresses(
        chatId,
        "  –Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å:\n–º. –ö–æ–ª–æ–º–∏—è –≤—É–ª.–ì–µ—Ç—å–º–∞–Ω–∞ –Ü. –ú–∞–∑–µ–ø–∏, –±—É–¥. 81/1\n —Å–º—Ç.–î–µ–ª—è—Ç–∏–Ω –≤—É–ª.16 –ª–∏–ø–Ω—è 222"
      );
      break;
  }
});

function sendAddresses(chatId, addresses) {
  bot.sendMessage(chatId, addresses);
}

bot.onText(/–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ üïò/, (msg) => {
  const chatId = msg.chat.id;
  const addressMessage = `–ú–∏–ø—Ä–∞—Ü—é—î–º–æ –±–µ–∑ –≤–∏—Ö—ñ–¥–Ω–∏—Ö –∑ –ø–æ–Ω–µ–¥—ñ–ª–∫–∞ –ø–æ –Ω–µ–¥—ñ–ª—é üóì\n–ó 08:00 –¥–æ 21:00 üõí`;
  bot.sendMessage(chatId, addressMessage);
});
bot.onText(/–ù–∞—à—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –≤ —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –º–µ—Ä–µ–∂–∞—Ö üì±/, (msg) => {
  const chatId = msg.chat.id;
  const addressMessage = `–ù–∞—à–∞ —ñ–Ω—Å—Ç–∞–≥—Ä–∞–º–º —Å—Ç–æ—Ä—ñ–Ω–∫–∞ üì∑\nhttps://www.instagram.com/supereconom.ua?igsh=MWRrdzZzb2R0MDU0OA==\n–ú–∏ –≤ —Ñ–µ–π—Å–±—É–∫\n—Å—Ç–æ—Ä—ñ–Ω–∫–∞ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ(`;
  bot.sendMessage(chatId, addressMessage);
});
bot.onText(/–ó–≤ º—è–∑–∞—Ç–∏—Å—è –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º üìû/, (msg) => {
  const chatId = msg.chat.id;
  const addressMessage = `–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É —Ç–∞ –º–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º ‚òéÔ∏è`;
  const cityKeyboard = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "Cick here", callback_data: "contact_themanager" }],
      ],
    },
    parse_mode: "HTML",
  };
  bot.sendMessage(chatId, addressMessage, cityKeyboard);
});
bot.on("callback_query", (callbackQuery) => {
  const username = callbackQuery.from.username;
  const messageId = callbackQuery.message.message_id;
  if (callbackQuery.data == "contact_themanager") {
    bot.sendMessage("622782478", `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @${username} –ø–æ—Ç—Ä–µ–±—É—î –¥–æ–ø–æ–º–æ–≥–∏.`, {
      reply_to_message_id: messageId,
    });
  }
});

bot.onText(/–û—Ü—ñ–Ω—ñ—Ç—å –Ω–∞—Å! üíØ/, (msg) => {
  const chatId = msg.chat.id;
  const addressMessage = `–ü—Ä–æ–π–¥—ñ—Ç—å –±—É–¥—å-–ª–∞—Å–∫–∞ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è üôÇ\nhttps://forms.gle/h177V3gN8R39KpYx9`;
  bot.sendMessage(chatId, addressMessage);
});
bot.onText(/–Ñ —Ä–æ–±–æ—Ç–∞! üë®‚Äçüíº/, (msg) => {
  const chatId = msg.chat.id;
  const addressMessage = `–í—ñ–ª—å–Ω—ñ –≤–∞–∫–∞–Ω—Å—ñ—ó üë®‚Äçüíº\nhttps://forms.gle/zDa3ab7kSLu8F2Bg9`;
  bot.sendMessage(chatId, addressMessage);
});
let users = [];
let message = "";
let photoFileId = "";
fs.readFile(userDataFilePath, (err, data) => {
  if (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", err);
    return;
  }
  try {
    users = JSON.parse(data);
    console.log("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.");
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", error);
  }
});
bot.onText(/\/sendtext ([\s\S]*)/, (msg, match) => {
  if (msg.from.username == "max_segeda" || username == "sirkosmm") {
    const inputMessage = match[1];
    if (inputMessage) {
      message = inputMessage;
      const userId = msg.chat.id;
      bot.sendMessage(
        userId,
        "–¢–µ–∫—Å—Ç –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –©–æ–± –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –π–æ–≥–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /sendalltext: " +
          message
      );
    } else {
      const userId = msg.chat.id;
      bot.sendMessage(
        userId,
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /send"
      );
    }
  } else {
    const userId = msg.chat.id;
    bot.sendMessage(
      userId,
      "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏!"
    );
  }
});

bot.on("photo", (msg) => {
  const username = msg.from.username;
  if (username === "max_segeda" || username === "sirkosmm") {
    const fileId = msg.photo[0].file_id;
    const chatId = msg.chat.id;

    if (msg.caption && msg.caption.startsWith("/sendphoto")) {
      photoFileId = fileId;
      bot.sendPhoto(chatId, fileId, {
        caption:
          "–§–æ—Ç–æ –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –©–æ–± –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –π–æ–≥–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /sendallphoto",
      });
    }
  } else {
    const userId = msg.chat.id;
    bot.sendMessage(userId, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–æ—Ç–æ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏!");
  }
});

bot.onText(/\/sendalltext/, async (msg) => {
  users.forEach((user) => {
    if (user.chatId) {
      bot
        .sendMessage(user.chatId, message)
        .catch((error) =>
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error)
        );
    } else {
      console.error(
        "–û—à–∏–±–∫–∞: chat_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        user
      );
    }
  });
  const userId = msg.chat.id;
  await bot.sendMessage(userId, "–†–æ–∑—Å–∏–ª–∫–∞ —Ç–µ–∫—Å—Ç—É –∑–∞–∫—ñ–Ω—á–µ–Ω–∞!");

  message = "";
});

bot.onText(/\/sendallphoto/, async (msg) => {
  users.forEach((user) => {
    if (user.chatId) {
      bot
        .sendPhoto(user.chatId, photoFileId)
        .catch((error) => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ:", error));
    } else {
      console.error(
        "–û—à–∏–±–∫–∞: chat_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        user
      );
    }
  });

  if (photoFileId) {
    const userId = msg.chat.id;
    await bot.sendMessage(userId, "–†–æ–∑—Å–∏–ª–∫–∞ —Ñ–æ—Ç–æ –∑–∞–∫—ñ–Ω—á–µ–Ω–∞!");
  }

  photoFileId = "";
});
setCommands();
